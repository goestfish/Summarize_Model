 
Pattern Propagation Speed in Synfire Chains with Excitatory -
Inhibitory Couplings  
 
Baktash Babadi  
 
School of Intelligent Systems, Institutes for Studies in Theoretical Physics & Mathematics  
baktash@ipm.ir  
 
 
Abstract  
 
The speed of firing pattern propagation  in a synfire chain, composed of non -leaky integrate -and-
fire neurons, and assuming homogenous connection delays, is studied. An explicit relation, 
relating the propagation speed to the connecting weights distribution and other network 
parameters, is deriv ed. The analytic results are then checked with a computer simulation. When 
the network is fed with a fully synchronized input pattern, the pattern propagation speed is 
independent of the weight parameters. When the fed input is asynchronous, depending on t he 
weight parameters, the propagation speed is more than or less than the synchronous case. In this 
case the propagation speed increases by increasing the mean or standard deviation of 
connecting weights. The biological relevance of these findings and thei r relevance to the notion of 
synfire chains are discussed.  
 
 
 
 
 
 
 
 
 
1. Introduction  
 
Recent evidences from multiunit recording studies indicate that the cortical neural populations are 
able to produce precise firing sequences (Abeles 1993a,b ; Prut et al 1 998). In a precise firing 
sequence, when the first neuron fires, the second neuron fires 1t milliseconds later and the third 
neuron 2t milliseconds later, with a sub -millisecond precision across trials.  
The synfire  chain model, proposed by Abeles (1991) on the basis of anatomical and physiological 
characteristics of the cerebral cortex,  appeared to be able to explain the generation of precise 
firing sequences. A synfire chain consists of successive pools of spiking neurons connected in a 
feed-forward manner . If all neurons in one pool fire synchronously, they will in turn elicit a 
synchronous firing pattern in the next pool and a train of synchronous firing patterns will be 
generated in the successive pools. In this case, when one observes three different neurons from 
three successive pools, he will detect a precise firing sequence among them. Given that all 
neurons in a pool are synchronous, the same precise firing sequence can be detected in several 
observations.  
To date, researchers have analyzed different aspects of the synfire chain models. These aspects 
include memory capacity (Herrmann et al 1995), learning algorithms (Hertz & Prügel -Bennett 
1996a,b; Sougné 2001 ) and robustness of synchronous pattern propagation  in spite of noise 
(Postma et al 1999; Diesman et al 1999; Gewaltig et al 2001) etc.  
Assuming that a synfire chain is responsible  for generating the observed precise firing 
sequences, the question arise that what properties of the synfire model are most im portant in this 
regard?  
As described earlier in the literature (Diesman et al 1999; Gewaltig et al 2001; Cateau & Fukai 
2001), an important aspect of synfire activity is the sustainability of synchronous firing patterns 
through the successive pools.  
As far as  its role in generation of precise firing sequences is concerned, another important aspect 
of synfire activity is the speed of pattern propagation from one pool to the next. Due to the synfire 
notion, it is the velocity of pattern propagation through the successive neuron pools that 
determines the time interval between single spikes within a recorded firing sequence.  
Pattern propagation velocity has been addressed in some studies using numerical simulations 
(Arnoldi & Brauer 1996) and analytical method s (Arndt et al 1995; Wennekers & Plam 1996; 
Wennekers 2000).  Arnoldi and Brauer (1996) have shown that two parallel synfire chains with 
different propagation speeds, coupled with excitatory synapses, will become synchronized 
eventually. Wennekers and Plam  (1996) and also Wennekers  (2000) have shown that the speed 
of pattern propagation in synfire chains considerably depends on the non -specific external input 
(background activity)  and also the number of co -activated chains. In these studies, the analytical  
approach was restricted to over -simplified models , which do not allow the network properties 
such as connecting weights distribution and temporal spread of patterns in each pool to be taken 
into account. On the other hand, the more detailed and biology in spired models were tackled only 
by means of computer simulations ( Arnoldi & Brauer 1996) , which can hardly capture the 
behavior of the model holistically.  
In this article we have extended the analytical method used by Herrmann et al (1995), to account 
for propagation speed in synfire chains. Thereby, we have derived an explicit formula, relating the 
speed of pattern propagation between two successive layers, to the network parameters. In order 
to incorporate the effect of firing pattern temporal jitter into  the analysis, we have also used the 
notion of pulse packets, which was introduced by Diesmann et al (1999).  
Given that the most learning algorithms proposed for the synfire chains (Hertz, Prügel -Bennett 
1996a,b; Sougné 2001 ), are based on the modification  of connection weights, we focused our 
concentration on the effect of connection weights distribution parameters on the propagation 
speed. However , it is worth to note that our analytical method can be likewise used to study the 
effect of other network par ameters.  
In the next section the structure of our network model is introduced. In section 3, we have applied 
the analytical methods to study the speed of pattern propagation in the network. In section 4, the 
analytical results are verified with a computer simulation of the network. Finally in section 5, the 
biological relevance of the results, particularly to the synfire model as a structure involved in the 
generation of precise firing sequences is discussed.  
 
2. The network model  
The network studied in thi s article, is a multi -layered, feed -forward network, which consists of 
non-leaky integrate -and-fire neurons. All the layers contain equal number of neurons (namely N) 
(Figure 1.a).  
2.1 The neuron Model  
The non -leaky integrate -and-fire neuron model is a sim plified approximation to the more detailed 
conductance based neuron models (Koch 1999). The voltage of a non -leaky integrate -and-fire 
neuron changes continuously as a function of its input with a rate adjusted to the real neuron’s 
membrane time constant. W henever this continuous changing potential reaches a certain value 
(the threshold), an action potential is artificially inserted, which simulates the firing event. 
Immediately after the action potential, the voltage will be reset to the resting potential. Although 
the non -leaky integrate -and-fire model is a caricature of a real neuron, it captures many of the 
real neuron properties and is much more realistic than the classic binary (Ising) neuron models in 
which the states of the neuron are discrete.  
The r esting membrane potential of this neuron is assumed to be zero and in the sub -threshold 
regime, the membrane potential is governed by:  
(1)                                                                             , )(    
 t Input
dtdV
ii mm
t =  
Where, m
iV is the voltage of the ith neuron at layer m, t is the membrane time constant of the 
neuron, which is taken equal for all the neurons in the network, and )(t Input imis the incoming 
input to the ith neuron at layer m. 
 
 
 
a                              b  
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1.  a) A schematic view of the studied network. b) Schematic view of the probability density of firing times for 
neurons is successive layers. The mean -to-mean (or peak -to-peak) int erval (the bold lines) is an index for pattern 
propagation delay between successive layers.  
 
 
2.2 The Input  
The neurons in the first layer, which are the initiators of synfire activity, are assumed to fire at 
independent, normally distributed random times.  The temporal probability density function for 
each pulse generated in the first layer can be written as:  
(2)                                                                       ))(5.0(
21)(2
1 11
s sprtExp t − = ,                                                              
where, 1sis the temporal standard deviatio n of the pulses. Without loss of generality, we 
assumed that the mean of firing times for the neurons in the first layer is zero. Thus, according to 
the pulse packet notion (Diesmann et al 1999), the first layer produces a pulse packet containing 
N n=1pulses with a temporal standard deviation of 1s. 

Except for the first layer, the input of each neuron is the weighted sum of the outputs of neurons 
in the previous layer, as illustrated in the following formula:  
  (3)                                  , ) ( )(  1
 ∑−  =−
jd
ji j ji it  t Outputw  t Inputm m m
 ,              
in which m
jiw  is the weight of the connection between the jth neuron of the donor layer                  
( layer m-1 ) to the i th neuron of the recipient layer (layer m), 1−m
jOutput  is the spike generated 
by the jth neuron of donor layer (layer m-1), and d
ijt is the connection delay. The delays for all 
connections are assumed to be equal, so we can omit the indi ces i,j and simply denote the delay 
by d
t instead.  
   
2.3 The connections  
Two successive layers are fully interconnected but there is no connection within a layer itself. 
There is also no feed back connection from one layer to the prev ious layers. All synaptic weights 
of the network are constant and distributed normally with mean weight of w and standard 
deviation of ws. 
2.4 Output  
A constant threshold value ( th) is assigned to each neuron, whi ch does not vary in time. The 
thresholds of all neurons are assumed to be equal. Whenever the membrane voltage of a neuron 
reaches its threshold, it fires, i.e. generates a spike which can be represented mathematically by 
a delta (impulse) function as:  
 (4)                                                                 , ) ( )(m md j jtt t Output −= , 
where, m
jt, is the firing time of the neuron, i.e. the time when its voltage has reached the 
threshold. Immediately after firing, the voltage of the neuron is rendered zero. In real neurons the 
duration of an effe ctive action potential is considerably short, also immediately after producing an 
action potential the membrane potential declines, so the above assumptions on the firing state 
(namely setting voltage to zero and using d (impulse funct ion) as the ultimate output function) 
seem to be relevant. In this analysis, we assume that each neuron produces one spike at the 
most in response of the incoming pulse packet.  
As mentioned above, the firing times of the neurons in the first layer have a d istribution with mean 
01=t  and standard deviation 1s. The neurons in the next layers in turn have firing times with 
some probability distribution characterized by a mean (mt) and a standard devia tion (ms), i.e. 
each layer m produce a pulse packet containing mn pulses with a temporal standard deviation 
ms, centered around mt. 
As most of the neu rons in layer m fire in times near mt, the time interval between 1+mt and mt 
can be used as a measure for pattern propagation delay between layers 1+m  and m. Thus, we 
use the mean -to-mean (or peak -to-peak) interval as an index for pattern propagation delay 
between successive layers (Figure 1.b). Note that the pattern propagation delay has an inverse 
relation with the propagation speed , i.e. the faster the propagation of pattern between to layers is, 
the shorter the propagation delay will be. In the rest of this article, we will focus our study on the 
effect of the network parameters on the pattern propagation delay.  
2. Analytic method  
Inserting eq.(3) and eq.(4) in eq.(1) and solving the differential equation for the ith neuron in layer 
1+m  yields:  
(5)                                                                 ) (   1
 1
∑  −− =+
jd
j ji it tt w Vm mq
t 
 
 
Now assume that the firing times of the neurons in layer m (the m
jt variables in (5) ) obey a 
normal distribution:  
(6)                                                           )) (5.0(
21)(2
mm
mm
s sprtt
Exp t−
− =  
 
 As it can be seen in section 4, this assumption is a reasonable approximation in a wide range of 
network parameters.  
With this assumption, when the number of firing ne urons in the layer m is sufficiently large, 
eq.(5) can be approximated as:  
(7)                              ) (  
)(1
mm m m m
s trtd
i dt
-µi
ittt Wn
 t) dtt (Wn
t V−−
Φ =′ −′ =∫∞+  
where mnis the number of firing neurons in layer m,  iW=∑jij
nw
m is a measure for the average 
of incoming weights  to the neuron and )(xΦ  is the cumulative standard normal distribution. 
Given that the weights of the network obey a normal distribution with mean w and stan dard 
deviation ws, the iWwill obey a normal distribution with mean w and standard deviation 
ms
nw respectively. So, by eq.(7), it is obvious that )(1t Vi+m has also a normal distribution with the 
following parameters:  
                                                               (8)                                                                            
) (
  ) (   
11



−−
Φ
=−−Φ =
++
tss
ss t
mm
mmm m m
md
w
Vd
ttt
nttt wnV
 
as its mean and standard deviation.  
Clearly, when )(1t Vi+m becomes greater than or equal with the threshold, the neuron fires. So the 
probability of firing before the time t for the neurons in layer 1+m  can be written as:  
(9)                                                                                              )( ,  
2)
2(
  
11)(2
1
++∞−+
−=−
=∫
msp
mm
Vtu
VthtudxxExp
?
 
 
Evidently, the probability distribution of firing for the neurons will be:  
(10)                                                         
2)2()( )()(2
1
1
prm
muExp
dttdu
dtt d?t−
= =+
+ 
Now, we must calculate the  mean of )(1t+mr  namely 1+mt. Assuming that 1+mt is near dtt+m, 
)(tu can be approximated as:  
  (11)                              
)2 22 2(. 22)2 22 2(   
)(d
wd
t tt nth t tt wn
tu
−−+−−−+
≈
m m mm m m m
sp st sp sp
    
With this approximation, 1+mt can be calculated as:  
(12)                      )
21
4)  8  (.
( 222 2
1−− +
++=+
ww d
nwn n wn th
tt t
ss t
sp
mm m
m m m 
and finally, the mean -to-mean interval for the layers 1+m andm, which is an index of pattern 
propagation delay, is:  
(13)                     )
21
4)  8  (.
( 222 2 2
1−− +
+=−=+
ww d
nwn n wn th
t t tD
ss t
sp
mm m
m m m 
which relates the mean -to-mean interval to the network parameters explicitly.  
Note that when the firing pattern in the layer m(the donor layer) is fully synchronous, ms will be 
zero, hence the second term in the right side of eq.(13) wi ll be also zero. In this case the pattern 
propagation speed is independent of the network parameters except the connection delay dt. 
When firing pattern of the layer m is not fully synchronized ( 0>ms ), the propagation speed can 
be lower than or higher than the fully synchronous case, i.e. if the second term in the right side of 
eq.(13) is positive, the mean -to-mean interval will be greater than dt, hence the pattern 
propagatio n speed will be lower and vice versa. The condition for the second term in the right 
side of (13) to be positive is:  
 (14)                                                                                       22
ts t
mth nthww− <   
From eq.(13) it is obvious that 0>
wddD and 0>
wddD
s.(provided that all the parame ters are 
positive values). Thus, when the other parameters of the network are fixed, increasing the mean 
of connection weights will increase the propagation speed respectively, and increasing it more 
than a critical value, can cause the propagation speed b ecome even more than the fully 
synchronized case.  
Given that 
wddD
s is also always positive, a similar reasoning is also applicable for the weights 
standard deviation. In this regard, considering all the other parameters of the network to be fixed, 
the condition for the second term in the right side of (13) to be positive is:  
    (15)                                                                               22 2
2tts
mthwnth
w− <  
So, increasing the weights standard deviation more than a critical value can increase the speed 
of pattern propagation as well.  
 
4. Simulation results  
We evaluated the above discussion through a computer simulation of a two -layered feed -forward 
network of non -leaky integrate -and-fire neurons. Each layer consists of 100 neurons. As 
mentioned above, the obtained results for two successive layers ca n be generalized for a network  
 
 
Figure 2.  The probability density distribution for firing times obtained by simulation (gray curves) and also analytic results 
(black solid curves) for a) the first layer of the network. Note that the neurons in the f irst layer are set to fire with a mean 
firing time of 0 and standard deviation of 5 ms . The solid curve is the result  of eq.(2) for these parameters b) The  
probability density distribution for firing times of the neurons in the second layer when 5=w  and 5=ws , c) 
when 93.7=w  and 5=ws , d) when 10=w  and 5=ws . The solid curves for the second layer (b -d) are the 
results of eq. (10) and the dotted lines  are the approximated results for the mean firing times from eq(12).  
 
having an arbitrary number of layers. To be a close approximation to the biological reality, the 
membrane time constant is set to 20 msec and the threshold to 20 mV above the resting pot ential 
(McCormik et al 1985). The synaptic delay for each connection is set to be 5 ms . The membrane 
potential s of the neurons (eq.(1)) were solved numerically by the forward Euler method. The time 
step was set to 0.01 ms .  
 
 
Figure 3.  The effect of weig ht parameters on propagation delay. a) Propagation delay as a function of mean weight. b) 
Propagation delay as a function of weight standard deviation. The circles show the simulation results, the solid line is the 
propagation delay numerically calculated by eq.(10) and the dotted line is the result of eq.(13).  
 
During the simulation, we imposed a normal distribution of firing times to the first layer (fig 2.a), 
and then studied the distribution of firing times in the second layer. The mean -to-mean interva l of 
the two distributions is a measure for pattern propagation delay between the two layers. All the 
results are the average of 100 realizations of the network with the corresponding parameters   
Figure 2 illustrates the density distribution of firing tim es of the neurons in the first and second 
layer for a number of weight parameters obtained the simulation (gray curves). The analytic 
results are also drawn for comparison (solid curves). The firing times of the neurons in first layer 
were set to obey a no rmal distribution with mean 0 and standard deviation 5 ms (figure 2.a). 
Figures (2.b -2d) show that our analytic formula for the density distribution of firing times in the 
second layer (eq (10)), which is the cornerstone of our analytic results, satisfacto rily feats the 
simulation results. The approximated mean of the distribution for layer 2 (eq (12)) is also 
illustrated (dashed lines). Also our approximation for the mean of firing times is acceptable in a 
wide range of parameters.    
As it can be seen, th e output spike times in the second layer in turn have a somehow bell -shaped 
(though not symmetric) density distribution curve and can be approximated by normal 
distributions, so our analysis can be generalized for more than two layers.  
 
Figure 4. Propag ation delay as a function of input pattern temporal standard deviation.  a) When 5=w , b) when 
93.7=w , c) when 10=w . The circles show the simulation results, the solid line is the propagation delay 
nume rically calculated by eq.(10) and the dotted line is the result of eq.(13).  
 
Also note that the distribution of spike times in the second layer is narrower than that of the first 
layers, i.e. the neurons in the second layers are more synchronized as menti oned by many 
researchers (Abeles 1991; Herrmann et al 1995; Marsalek 1997; Burkitt & Clrak 1999).  
Figure 3.a illustrates the propagation delay between the two layers as a function of mean 
connection weight, when the other network parameters are fixed and t he neurons in the first layer 
fire with a temporal standard deviation of 5 ms . The simulation results are shown by circles, the 
exact analytic result derived numerically from eq.(10) is shown by the solid line and the 
approximated delay from eq.(13) by the  dashed line. As expected, by increasing the mean 
weight, the propagation delay decreases (i.e. the propagation speed increases), so that it can 
become even shorter than the connection delay.  Figure 3.b illustrates the propagation delay as a 
function conn ection weights standard deviation, when the other network parameters are fixed. 
Here also, the propagation delay decrease by increasing the weights standard deviation, as 
expected.  
Figure 4 shows the propagation delay as a function of input spikes temporal  standard deviation. 
In figure 4.a, the mean weight is set to be 5=w . According to eq.(14) we expect the propagation 
delay to increase by increasing the input spikes temporal standard deviation. As it can be seen, 
the propagation delay i ncrease almost linearly by increasing the input spikes standard deviation.  
In figure 4.b, the mean weight is set to be 93.7=w , which according to eq.(14) must result the 
propagation delay to be insensitive to the input spikes standard devia tion. The simulation results 
confirm this expectation. Finally, the mean weight is set to be 10=w  in figure 4.c. The simulation 
results show that, as expected from eq.(14), the propagation delay remains unchanged by 
increasing the input s pikes standard deviation in this case. So increasing the input spikes 
standard deviation (i.e. the amount of asynchrony in input spikes) can increase, decrease or have 
no effect on the pattern propagation speed depending on other network parameters.  
 
4. Di scussion  
In summery, we have studied the effect of weight distribution parameters and also the input 
spikes jitter (temporal standard deviation) on the speed of pattern propagation between 
successive layers of a synfire chain, by analytical methods and als o computer simulation. 
Increasing the mean or standard deviation of connection weights increases the pattern 
propagation speed. The input spikes asynchrony can increase or decrease this speed almost 
linearly, depending on the weight parameters.  
When the i nput spikes are fully synchronous, the propagation speed depends only on the 
connection delays between the neurons, which are more structural properties of the network 
compared with connection weights and do not change rapidly during the process of learnin g and 
plasticity. This result emphasizes once again the importance of synchronous firing patterns (as 
proposed in the initial notion of synfire chain) as the mechanism involved in generation of precise 
firing sequences. When the input spikes to the network s are fully synchronous, the network can 
generate reproducible firing sequences, which do not change time by time with variations of the 
synaptic weights. Furthermore, as it can be seen in figure 4, by increasing the temporal standard 
deviation of input sp ikes, the random deviation of the propagation delay from its expected value 
increases. So asynchrony in the input pattern may hinder the generation of reproducible firing 
sequences, even if the network parameters remain unchanged between two trails.    
On the other hand, the linear dependence of the propagation speed on the input spikes temporal 
standard deviation, shows that a finite amount of asynchrony in the propagating patterns of a 
feed-forward network, can act as a control parameter for the pattern p ropagation speed. The 
biological relevance of this conjecture remains to be studied.    
 
References  
Abeles, M. (1991).  
Corticonics: Neural circuits of the cerebral cortex. New -York: Cambridge University 
Press.  
 
Abeles, M., Prut, Y., Bergman, H., Vaadia, E ., & Aertsen, A. (1993a).  
Integration, Synchronicity and Periodicity. In A. Aertsen (Ed.), Brain Theory: Spatio -
Temporal Aspects of Brain Function. Amsterdam, Elsevier : 149 -181 
 
Abeles M., Bergman H., Margalit E., Vaadia E. (1993b)  
Spatiotemporal Firing Patterns in the Frontal Cortex of Behaving Monkeys, J. 
Neurophysiol., 70 : 1629 -1638  
 
Arndt, M., Erlhagen, W., and Aertsen, A. (1995)  
Propagation of Synre Activity in Cortical Networks - a Dynamical Systems Approach. In: 
Lappen, B. and Gielen, S. Neural Ne tworks: Articial Intelligence and Industrial 
Applications. Proceedings of the Third Annual SNN Symposium on Neural Networks. 
Springer, Berlin, 1995  
 
Arnoldi HM, Brauer W (1996)  
Synchronization without oscillatory neurons. , Biol Cybern, 74(3):209 -23  
 
Burkitt, A. N., and Clark, G. M. (1999)  
Analysis of integrate -and-fire neurons: synchronization of synaptic input and spike output, 
Neural Computation 11(4) : 871 -901 
 
Câteau H, Fukai T. (2001)  
Fokker -Plank approach to the pulse packet propagation in synfire chain. Neural Networks 
(14) : 675 -685   
 
Diesmann M, Gewaltig M -O, Aertsen A  (1999)  
Stable propagation of synchronous spiking in cortical neural networks. , Nature, 402:529 -
532 
 
Gewaltig M.O., Diesmann M., Aertsen A. (2001)  
Propagation of cortical synfir e activity: survival probability in single trials and stability in 
the mean. Neural Networks, 14 (6 -7) : 657 -673  
 
Herrmann, M., Hertz, J.A., & Prügel -Bennet, A. (1995).  
Analysis of Synfire Chains. Network:Computation in Neural Systems (6) : 403 -414. 
 
Hertz J., Prügel -Bennett A. (1996a)  
Learning short synfire chains by self -organization. Network: Computatioon in Neural 
Systems (7) : 357 -363. 
 
Hertz J., Prügel -Bennett A. (1996b)  
Learning synfire chains: Turning noise into signal. International Journal of Ne ural 
Systems (7) : 445 -451 
 
Koch C. (1999)  
Simplified Models of Individual Neurons, in Biophysics of Computation: Information 
Processing in Single Neurons, Oxford University Press, 1999  
 
Marsalek P., Koch C., Maunsell J. (1997)  
On the relationship between synaptic input and spike output jitter in individual neurons, 
Proc. Natl. Acad. Sci. 94 : 735 -740  
 
McCormick D. A., Connors B. W., Lighthall J. W., and Prince D. A., (1985)  
Comparative electrophysiology of pyramidal and sparsely spiny stellate neurons of the 
neocortex. J. Neurophysiol., 54 : 782 -805 
 
Postma EO, van den Herik HJ, Hudson PT (1996)  
Robust feedforward processing in synfire chains. , Int J Neural Syst, 7(4):537 -42 
Prut, Y., Vaadia, E., Bergman, H., Haalman, I., Slovin, H., & Abeles, M. (1998).  
Spatiotemporal structure of cortical activity: Properties and behavioral relevance. Journal 
of Neurophysiology (79) :2857 -2874.   
 
Sougné, J.P. (2001).  
A learning algorithm for synfire chains. In R. M. French & J. P. Sougné(Eds.) 
Connectionist Models of L earning, Development and Evolution. London,Springer Verlag : 
23-32 
 
Wennekers T, Plam G. (1996)  
Controling the Speed of Synfire Chains. Proc. Of 6th International Conference on 
Artificial Neural Networks, Springer, Berlin : 451 -456 
 
Wennekers T. (2000)  
Dynamics of spatio -temporal patterns in associative networks of spiking neurons.  
Neurocomputing 32 : 597 -602 
 
 
 
 
 
 
 
 
 
